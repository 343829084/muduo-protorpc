package zurg;

option cc_generic_services = true;
option java_generic_services = true;
option py_generic_services = true;
option java_package = "com.chenshuo.muduo.zurg.proto";
option java_outer_classname = "SlaveProto";

message GetHardwareRequest {
  optional bool lshw = 1 [default = false];
}

message GetHardwareResponse {
  optional string lspci = 1;
  optional string lscpu = 2;
  optional string lshw = 3;
  optional string ifconfig = 4;
}

message GetFileContentRequest {
  required string file_name = 1;
  optional int32 max_size = 2 [default = 1048576];
  optional int64 offset = 3 [default = 0];
}

message GetFileContentResponse {
  required int32 error_code = 1;
  optional bytes content = 2;
  optional int64 file_size = 3;
}

message RunCommandRequest {
  required string command = 1;
  optional string cwd = 2 [default = "/tmp"];
  repeated string args = 3;
  repeated string envs = 4;
  optional bool envs_only = 5 [default = false];
  optional int32 max_stdout = 6 [default = 1048576];
  optional int32 max_stderr = 7 [default = 1048576];
  optional int32 timeout = 8 [default = 60];
  optional int32 max_memory_mb = 9 [default = 32768];
}

message RunCommandResponse {
  required int32 error_code = 1;
  optional int32 pid = 2;
  optional int32 status = 3;
  optional bytes std_output = 4;
  optional bytes std_error = 5;

  optional int64 start_time_us  = 16;
  optional int64 finish_time_us = 17;
  optional float user_time      = 18;
  optional float system_time    = 19;

  optional int64 memory_maxrss_kb = 20;
  // optional int64 ctxsw = 11;

  optional int32 exit_status = 30 [default = 0];
  optional int32 signaled = 31 [default = 0];
  optional bool coredump = 32 [default = false];
}

message AddApplicationRequest {
  required string name = 1;
  required string executable = 2;
  repeated string args = 3;
  repeated string envs = 4;
  optional bool envs_only = 5 [default = false];
  optional bool redirect_stdout = 6 [default = true];
  optional bool redirect_stderr = 7 [default = true];
  optional string cwd = 8 [default = "/var/tmp"];
}

message AddApplicationResponse {
}

message StartApplicationRequest {
  required string name = 1;
}

message StartApplicationResponse {
}

message StopApplicationRequest {
  required string name = 1;
}

message StopApplicationResponse {
}

message GetApplicationRequest {
  required string name = 1;
}

enum ApplicationStatus {
  kUnknown = 0;
  kRunning = 1;
  kExited = 2;
}

message ApplicationInfo {
  required ApplicationStatus status = 1;
  required string name = 2;
  optional int32 pid = 3;

  optional int64 start_time_us = 10;
  optional int64 last_stop_time_us = 11;
  optional int32 threads = 12;

  optional int32 last_exit_status = 30;
  optional int32 last_signaled = 31;
  optional bool last_coredump = 32;
}

message GetApplicationResponse {
  required ApplicationInfo app_info = 1;
}

message ListApplicationsRequest {
}

message ListApplicationsResponse {

  repeated ApplicationInfo applications = 2;
}

message RemoveApplicationsRequest {
  repeated string name = 1;
}

message RemoveApplicationsResponse {
}

service SlaveService {
  rpc getHardware (GetHardwareRequest)
    returns (GetHardwareResponse);
  rpc getFileContent (GetFileContentRequest)
    returns (GetFileContentResponse);
  rpc runCommand (RunCommandRequest)
    returns (RunCommandResponse);
  rpc addApplication (AddApplicationRequest)
    returns (AddApplicationResponse);
  rpc startApplication (StartApplicationRequest)
    returns (StartApplicationResponse);
  rpc stopApplication (StopApplicationRequest)
    returns (StopApplicationResponse);
  rpc getApplication (GetApplicationRequest)
    returns (GetApplicationResponse);
  rpc listApplications (ListApplicationsRequest)
    returns (ListApplicationsResponse);
  rpc removeApplications (RemoveApplicationsRequest)
    returns (RemoveApplicationsResponse);
}

